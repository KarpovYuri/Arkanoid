.container {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: calc(100vh - 58px); /* - высота навбара */
  background-color: var(--page-bg-color);
  background-image: url("../../assets/img/space-bg.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  --descr-duration: 1000ms;
  --descr-delay: 400ms;
}

.field {
  position: relative;
  overflow: hidden;
  width: 1024px;
  min-width: 1024px;
  border: 1px solid var(--border-color);
  border-radius: 12px;
  background-color: var(--page-bg-color);
  background-image: url("../../assets/img/arkanoid-title.png");
  background-position: center;
  background-size: contain;
  background-repeat: no-repeat;
  background-blend-mode: var(--arkanoid-title-blend-mode);
  aspect-ratio: 16/11;
}

.canvas {
  width: 100%;
  height: 100%;
}

.dummyScreen {
  position: absolute;
  top: 0;
  display: flex;
  flex-direction: column;
  gap: 32px;
  align-items: center;
  overflow: hidden;
  width: 100%;
  height: 100%;
  padding: 32px;
  background-color: var(--overlay-color);
}

.startScreen {
  justify-content: space-between;
}

.descrWrapper {
  padding: 32px;
  border: 4px solid var(--border-color);
  border-radius: 8px;
  text-align: center;
  color: var(--game-descr-font-color);
  background-color: var(--game-descr-bg-color);
}

.descrTitle {
  margin-top: 0;
  font-size: 32px;
}

.descrText {
  font-size: 18px;
  line-height: 1.5;
  letter-spacing: 0.5px;
  text-align: start;
}

.button {
  max-width: 400px;
  color: var(--game-descr-font-color);
}

.startButton {
  margin-top: auto;
}

.startButtonVisible {
  opacity: 1;
}

.endScreen {
  justify-content: center;
}

.endText {
  margin-top: auto;
  margin-bottom: auto;
  font-weight: 700;
  font-size: 4em;
  color: var(--game-descr-font-color);
}

@media (prefers-reduced-motion: no-preference) {
  .descrWrapper {
    transition-delay: var(--descr-delay);
    transition-timing-function: cubic-bezier(0.47, 1.64, 0.41, 0.8);
    transition-duration: var(--descr-duration);
    transition-property: transform;
    transform: translateY(-100vh);
  }

  .descrWrapperVisible {
    transform: translateY(0);
  }

  .button {
    transition-delay: var(--button-transition-delays), var(--descr-delay);
    transition-timing-function: var(--button-transition-functions), ease-in;
    transition-duration: var(--button-transition-durations), var(--descr-duration);
    transition-property: var(--button-transition-properties), transform;
  }

  .startButton {
    transform: translateY(200px);
  }

  .startButtonVisible {
    transform: translateY(0);
  }
}
